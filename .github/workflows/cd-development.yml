# CD Pipeline for Development Environment
name: Deploy to Development

on:
  push:
    branches: [ develop ]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even if tests fail'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '18'
  AWS_REGION: 'ap-northeast-1'
  ENVIRONMENT: 'development'

jobs:
  # Run CI checks first
  ci-checks:
    name: CI Checks
    uses: ./.github/workflows/ci.yml

  # Deploy to Development
  deploy-development:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: ci-checks
    if: success() || (github.event.inputs.force_deploy == 'true')
    environment: development
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Install frontend dependencies
      run: npm ci
      
    - name: Build frontend
      run: npm run build
      
    - name: Install CDK dependencies
      working-directory: cdk
      run: npm ci
      
    - name: Build CDK
      working-directory: cdk
      run: npm run build
      
    - name: CDK Bootstrap (if needed)
      working-directory: cdk
      run: npx cdk bootstrap --context environment=${{ env.ENVIRONMENT }}
      
    - name: Deploy Infrastructure
      working-directory: cdk
      run: |
        npx cdk deploy \
          --context environment=${{ env.ENVIRONMENT }} \
          --require-approval never \
          --outputs-file outputs-${{ env.ENVIRONMENT }}.json
          
    - name: Upload deployment outputs
      uses: actions/upload-artifact@v4
      with:
        name: deployment-outputs-dev
        path: cdk/outputs-${{ env.ENVIRONMENT }}.json
        retention-days: 30
        
    - name: Deployment Summary
      run: |
        echo "## ðŸš€ Development Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: ${{ env.ENVIRONMENT }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Region**: ${{ env.AWS_REGION }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Deployed at**: $(date)" >> $GITHUB_STEP_SUMMARY

  # Post-deployment tests
  post-deployment-tests:
    name: Post-deployment Tests
    runs-on: ubuntu-latest
    needs: deploy-development
    if: success()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download deployment outputs
      uses: actions/download-artifact@v4
      with:
        name: deployment-outputs-dev
        path: ./
        
    - name: Run smoke tests
      run: |
        echo "Running smoke tests against development environment"
        # Add actual smoke tests here
        echo "âœ… Smoke tests passed"
        
    - name: Health check
      run: |
        echo "Performing health checks"
        # Add health check logic here
        echo "âœ… Health checks passed"