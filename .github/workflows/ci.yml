# CI Pipeline for OwlNest Discussion Platform
name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  # Frontend Tests and Build
  frontend-ci:
    name: Frontend CI
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run type checking
      run: npm run type-check
      
    - name: Run linting
      run: npm run lint
      
    - name: Run tests with coverage
      run: npm run test:coverage
      
    - name: Build frontend
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: build/
        retention-days: 7
        
    - name: Upload test coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/
        retention-days: 7

  # CDK Infrastructure Tests and Synth
  infrastructure-ci:
    name: Infrastructure CI
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: cdk/package-lock.json
        
    - name: Install CDK dependencies
      working-directory: cdk
      run: npm ci
      
    - name: Run CDK tests
      working-directory: cdk
      run: npm test
      
    - name: Build CDK
      working-directory: cdk
      run: npm run build
      
    - name: CDK Synth (Development)
      working-directory: cdk
      run: npx cdk synth --context environment=development
      
    - name: CDK Synth (Staging)
      working-directory: cdk
      run: npx cdk synth --context environment=staging
      
    - name: CDK Synth (Production)
      working-directory: cdk
      run: npx cdk synth --context environment=production
      
    - name: Upload CDK artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cdk-artifacts
        path: cdk/cdk.out/
        retention-days: 7

  # Security and Quality Checks
  security-checks:
    name: Security & Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run npm audit
      run: npm audit --audit-level=moderate
      
    - name: Install CDK dependencies
      working-directory: cdk
      run: npm ci
      
    - name: Run CDK npm audit
      working-directory: cdk
      run: npm audit --audit-level=moderate

  # Integration Tests (if applicable)
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [frontend-ci, infrastructure-ci]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: build/
        
    # Placeholder for integration tests
    - name: Run integration tests
      run: |
        echo "Integration tests would run here"
        echo "This could include E2E tests, API tests, etc."